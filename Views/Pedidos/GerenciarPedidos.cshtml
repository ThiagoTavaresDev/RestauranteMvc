@model List<Pedido>
@{
    ViewData["Title"] = "Gerenciar Pedidos";
}

<div class="container my-4">
    <h1 class="mb-4">Gerenciar Pedidos</h1>

    @if (TempData["Sucesso"] != null)
    {
        <div class="alert alert-success mb-4">
            <i class="fas fa-check-circle mr-2"></i> @TempData["Sucesso"]
        </div>
    }

    @if (!Model.Any())
    {
        <div class="text-center my-5">
            <i class="fas fa-clipboard-list fa-4x mb-3 text-muted"></i>
            <h2>Não há pedidos registrados</h2>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Lista de Pedidos</h5>
                <span class="badge badge-light">Total: @Model.Count</span>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="bg-light">
                            <tr>
                                <th>Pedido #</th>
                                <th>Cliente</th>
                                <th>Data</th>
                                <th>Valor Total</th>
                                <th>Status</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var pedido in Model)
                            {
                                <tr>
                                    <td>@pedido.PedidoId</td>
                                    <td>@pedido.Usuario.NomeCompleto</td>
                                    <td>@pedido.DataPedido.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>R$ @pedido.ValorTotal.ToString("F2")</td>
                                    <td>
                                        @{
                                            string badgeClass = pedido.Status switch
                                            {
                                                StatusPedido.Recebido => "badge-info",
                                                StatusPedido.EmPreparo => "badge-primary",
                                                StatusPedido.SaiuParaEntrega => "badge-warning",
                                                StatusPedido.Entregue => "badge-success",
                                                StatusPedido.Cancelado => "badge-danger",
                                                _ => "badge-secondary"
                                            };
                                        }
                                        <span class="badge @badgeClass text-primary">@pedido.Status.ToString()</span>
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                        <a asp-controller="Pedidos" asp-action="Detalhes" asp-route-id="@pedido.PedidoId" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i> Detalhes
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="fas fa-cog"></i> Status
                                        </button>
                                        
                                        <div class="dropdown-menu">
                                            <form asp-controller="Pedidos" asp-action="AtualizarStatusPedido" method="post">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@pedido.PedidoId" />
                                                <button type="submit" name="status" value="0" class="dropdown-item @(pedido.Status == StatusPedido.Recebido ? "active" : "")">Recebido</button>
                                                <button type="submit" name="status" value="1" class="dropdown-item @(pedido.Status == StatusPedido.EmPreparo ? "active" : "")">Em Preparo</button>
                                                <button type="submit" name="status" value="2" class="dropdown-item @(pedido.Status == StatusPedido.SaiuParaEntrega ? "active" : "")">Saiu para Entrega</button>
                                                <button type="submit" name="status" value="3" class="dropdown-item @(pedido.Status == StatusPedido.Entregue ? "active" : "")">Entregue</button>
                                                <div class="dropdown-divider"></div>
                                                <button type="submit" name="status" value="4" class="dropdown-item text-danger @(pedido.Status == StatusPedido.Cancelado ? "active" : "")">Cancelar</button>
                                            </form>
                                        </div>

                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>
